services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - backend

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
    networks:
      - backend

  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: admin12345
      DOCKER_INFLUXDB_INIT_ORG: my-org
      DOCKER_INFLUXDB_INIT_BUCKET: sensors_data
    networks:
      - backend

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin12345
      MONGO_INITDB_DATABASE: sensor_data
    networks:
      - backend

  influxdb_consumer_api:
    image: touradbaba/influxdb-consumer-api:latest
    container_name: influxdb_consumer_api
    environment:
      KAFKA_BROKER: kafka:9092
    ports:
      - "5000:5000"
    depends_on:
      - influxdb
      - kafka
    networks:
      - backend

  mongodb_consumer_api:
    image: touradbaba/mongodb-consumer-api:latest
    container_name: mongodb_consumer_api
    environment:
      KAFKA_BROKER: kafka:9092
    ports:
      - "5001:5001"
    depends_on:
      - mongodb
      - kafka
    networks:
      - backend

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    security_opt:
      - no-new-privileges:true
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - influxdb
    networks:
      - backend
    volumes:
      - grafana-data:/var/lib/grafana

volumes:
  mongodb_data:
  grafana-data:

networks:
  backend:
    driver: bridge
